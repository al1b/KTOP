<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SCICT.NLP.TextProofing.SpellChecker</name>
    </assembly>
    <members>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState">
            <summary>
             Differnet state of correct spacing problems
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState.SpaceDeletation">
            <summary>
             Mistakenly omission of a white space (e.g. computersoftware)
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState.SpaceDeletationSerrially">
            <summary>
             Mistakenly omission of many white spaces (e.g. computersoftwarearchitecture)
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState.SpaceInsertationLeft">
            <summary>
             Mistakenly Insertion of a white space in left side of word (e.g. comput er software)
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState.SpaceInsertationLeftSerrially">
            <summary>
             Mistakenly Insertion of white spaces in left side of word and its parted words (e.g. com p u ter software)
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState.SpaceInsertationRight">
            <summary>
             Mistakenly Insertion of a white space in right side of word (e.g. computer so ftware)
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState.SpaceInsertationRightSerrially">
            <summary>
             Mistakenly Insertion of white spaces in right side of word and its parted words (e.g. computer s o ftware)
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState.None">
            <summary>
             Spacing is correct
            </summary>
        </member>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.SuggestionType">
            <summary>
             Type of suggestion, warning or error
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SuggestionType.Green">
            <summary>
             Green for warning types
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SuggestionType.Red">
            <summary>
             Red for explicit error types
            </summary>
        </member>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.SpellingRules">
            <summary>
             Different rules for spellchecking
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellingRules.VocabularyWordsSpaceCorrection">
            <summary>
             Consider space correction for dictionary words
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellingRules.CheckForCompletetion">
            <summary>
             Consider suggestions that may appear by assuming word as incomplete and complete rest of it (e.g. compu -> computer)
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellingRules.IgnoreHehYa">
            <summary>
             Ignore writing of mocker Yeh of Kasra as "Heh with Yeh above" (e.g. "خانۀ" instead of "خانه‌ی")
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellingRules.IgnoreLetters">
            <summary>
             Ignore single letters
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellingRules.IgnorePseudoSpaceCompoundWords">
            <summary>
             Ignore existnce of compund words with pseudo space in dictionary and accept them if the parts exists
            </summary>
        </member>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.OnePassCorrectionRules">
            <summary>
             Rules of Prespelling
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.OnePassCorrectionRules.CorrectPrefix">
            <summary>
             Correct spacing of Prefixes such as Mee and NeMee (e.g. "می توانم" and "میتوانم" to "می‌توانم")
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.OnePassCorrectionRules.CorrectSuffix">
            <summary>
             Correct spacing of Suffixes such as Haa and objective pronouns (e.g. "شرکت ها" and "شرکتها" to "شرکت‌ها")
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.OnePassCorrectionRules.CorrectBe">
            <summary>
             Correct sticked Be to Be with white space (e.g. "بعنوان" to "به عنوان")
            </summary>
        </member>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig">
            <summary>
             configuration Class of Spell Checker
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig.StemPath">
            <summary>
             The absolute path of stem's file.
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig.DicPath">
            <summary>
             The absolute path of dictionary file.
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig.EditDistance">
            <summary>
             Indicates the Maximum Edit Distance that searched for finding suggestions
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig.SuggestionCount">
            <summary>
             Number of Suggestions
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig.ColloquialSupport">
            <summary>
            Support for colloquial words inflection
            </summary>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig.#ctor">
            <summary>
             Constructor Class
            </summary>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellCheckerConfig.#ctor(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
             Constructor Class
            </summary>
            <param name="dicPath">Absolute path of dictionary file</param>
            <param name="stemPath">Absolute path of verb stem file</param>
            <param name="editDist">Maximum Edit Distance that searched for finding suggestions</param>
            <param name="sugCnt">Number of Suggestions</param>
            <param name="colloquialSupport">Support for colloquial word inflection</param>
        </member>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker">
            <summary>
             Persian Spell Checker
             This Class find and rank respelling suggestions for a incorrectly spelled Persian word
            </summary>
        </member>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine">
            <summary>
             Spell Checker Engine
             This Class find and rank respelling suggestions for a incorrectly spelled word
            </summary>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.#ctor(SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig)">
            <summary>
             Class Constructor
            </summary>
            <param name="config">Spellchecker Configuration</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.Reconfigure(SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig)">
            <summary>
            Reconfigure the engine
            </summary>
            <param name="sc">Spellchecker Configuration</param>
            <returns></returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.AppendDictionary(System.String)">
             <summary>
             Append another dictionary
             </summary>
             <param name="fileName">dictionary file name</param>
            <returns>True if dictionary is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.CheckDictionaryCorrectness(System.String,System.Int64)">
            <summary>
             Check Dictionary Correctness
            </summary>
            <param name="fileName">File name</param>
            <param name="wordCounts">Extracted words count</param>
            <returns></returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.ClearDictionary">
            <summary>
             Remove all words from dictionary
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.AddToIgnoreList(System.String)">
             <summary>
             Add a word to Ignore List
             </summary>
             <param name="word">word to be ignored</param>
            <returns>True if word is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.AddToDictionary(System.String)">
             <summary>
             Add a correct word to dictionary
             </summary>
             <param name="word">New word</param>
             <param name="freq">Usage frequency of word</param>
            <returns>True if word is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.AddToDictionary(System.String,System.String)">
             <summary>
             Add a correct word to dictionary
             </summary>
             <param name="word">New word</param>
             <param name="fileName">File name</param>
            <returns>True if word is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.AddToDictionary(System.String,System.Int32,SCICT.NLP.Persian.Constants.PersianPOSTag)">
             <summary>
             Add a correct word to dictionary
             </summary>
             <param name="word">New word</param>
             <param name="freq">Usage frequency of word</param>
             <param name="posTag">POS tag of word</param>
            <returns>True if word is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.AddToDictionary(System.String,System.Int32,SCICT.NLP.Persian.Constants.PersianPOSTag,System.String)">
             <summary>
             Add a correct word to dictionary
             </summary>
             <param name="word">New word</param>
             <param name="freq">Usage frequency of word</param>
             <param name="posTag">POS tag of word</param>
             <param name="fileName">File name</param>
            <returns>True if word is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.RemoveFromDictionary(System.String)">
            <summary>
            Remove a word from dictionary
            </summary>
            <param name="word">input word</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.IsRealWord(System.String)">
            <summary>
            Check if the word is correct (exists in dictionary)
            </summary>
            <param name="word">Word</param>
            <returns>True if word is correct, Otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.IsInIgnoreList(System.String)">
            <summary>
            Check if the word is in ignore list
            </summary>
            <param name="word">Word</param>
            <returns>True if word is exist, Otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.IsRealWord(System.String,System.Int32@,SCICT.NLP.Persian.Constants.PersianPOSTag@)">
             <summary>
             Check if the word is correct (exists in dictionary)
             </summary>
             <param name="word">Word</param>
             <param name="freq">Frequency</param>
             <param name="posTag">POS tag</param>
             <returns>True if word is correct, Otherwise False</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.GetAllWords">
            <summary>
            Get All dictionary's words
            </summary>
            <returns></returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.CompleteWord(System.String)">
            <summary>
            Complete the rest of incomplete word
            </summary>
            <param name="subWord">Incomplete word</param>
            <returns>Completed words start with incomplete word</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.CompleteWord(System.String,System.Int32)">
            <summary>
            Complete the rest of incomplete word
            </summary>
            <param name="subWord">Incomplete word</param>
            <param name="count">Number of returned suggestions</param>
            <returns>Completed words start with incomplete word</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SortSuggestions(System.String[])">
            <summary>
            Return most frequent word from list of words
            </summary>
            <param name="words">list of words</param>
            <returns>Most frequent word</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SortSuggestions(System.String[],System.Int32)">
            <summary>
            Sort a list of words ordered by usage frequency
            </summary>
            <param name="words">list of words</param>
            <param name="suggestionCount">Number of returned suggestions</param>
            <returns>Sorted list</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SortSuggestions(System.String,System.String[])">
            <summary>
            return most string similar word of list with givven word
            </summary>
            <param name="baseWord">Base word used to compare (Usually incorrect word)</param>
            <param name="words">List of words (Usually list of respelling suggestions)</param>
            <returns>most similar word</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SortSuggestions(System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            return most string similar word of list with givven word
            </summary>
            <param name="baseWord">Base word used to compare (Usually incorrect word)</param>
            <param name="words">List of words (Usually list of respelling suggestions)</param>
            <param name="freq">Word's frequency</param>
            <returns>most similar word</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SortSuggestions(System.String,System.String[],System.Int32)">
            <summary>
            Sort a list of words ordered by string similarity
            </summary>
            <param name="baseWord">Base word used to compare (Usually incorrect word)</param>
            <param name="words">List of words (Usually list of respelling suggestions)</param>
            <param name="suggestionCount">Number of returned suggestions</param>
            <returns>Sorted list</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SortSuggestions(System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)">
            <summary>
            Sort a list of words ordered by string similarity
            </summary>
            <param name="baseWord">Base word used to compare (Usually incorrect word)</param>
            <param name="words">List of words (Usually list of respelling suggestions)</param>
            <param name="freq">Word frequency</param>
            <param name="suggestionCount">Number of returned suggestions</param>
            <returns>Sorted list</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.ExtractRealWords(System.String[])">
            <summary>
            Return dictionary (correct) words
            </summary>
            <param name="words">List of words</param>
            <returns>List of dictionary (correct) words</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.ExtractRealWords(System.String[],System.Collections.Generic.Dictionary{System.String,System.Int32}@,System.Collections.Generic.Dictionary{System.String,SCICT.NLP.Persian.Constants.PersianPOSTag}@)">
            <summary>
            Return dictionary words including POS
            </summary>
            <param name="words">List of words</param>
            <param name="freqDic">Frequency</param>
            <param name="posDic">POS tag</param>
            <returns>List of dictionary words</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SpellingSuggestions(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32}@,System.Collections.Generic.Dictionary{System.String,SCICT.NLP.Persian.Constants.PersianPOSTag}@)">
            <summary>
            Get all correct respelling suggestions of an incorrect word including their POS tag
            </summary>
            <param name="word">(Incorrect) Word</param>
            <param name="freqDic">Frequency</param>
            <param name="posDic">POS Tag</param>
            <returns>List of correct respellings</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.RankedSpellingSuggestions(System.String,System.Int32)">
            <summary>
            Get a list of sorted (ranked) correct respelling suggestions of an incorrect word by similarity
            </summary>
            <param name="word">Wrong Word</param>
            <param name="suggestionCount">Number of returned suggestions</param>
            <returns>Sorted list of correct respelling suggestions</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SpellingSuggestions(System.String)">
            <summary>
            Get a list of correct respelling and homophone suggestions of an incorrect word by similarity
            </summary>
            <param name="word">Wrong Word</param>
            <returns>Sorted list of correct respelling suggestions</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SpellingSuggestions2(System.String)">
            <summary>
            Get a list of correct respelling and homophone suggestions of an incorrect word by similarity
            </summary>
            <param name="word">Wrong Word</param>
            <returns>Sorted list of correct respelling suggestions</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SpellingSuggestions3(System.String,System.Int32)">
            <summary>
            Get a list of correct respelling and homophone suggestions of an incorrect word by similarity
            </summary>
            <param name="word">Wrong Word</param>
            <returns>Sorted list of correct respelling suggestions</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.MultiplyStrings(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a sequence of strings gained from concatenating all the strings 
            in <paramref name="first"/> with all the strings in <paramref name="second"/>.
            </summary>
            <param name="first">The sequence of strings to form the left-hand-side of the concatenations.</param>
            <param name="second">The sequence of strings to form the right-hand-side of the concatenations.</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SpellingSuggestions(System.String,System.Int32)">
            <summary>
            Get a list of correct respelling and homophone suggestions of an incorrect word by similarity
            </summary>
            <param name="word">Wrong Word</param>
            <param name="editDistance">Edit distance</param>
            <returns>Sorted list of correct respelling suggestions</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.WordFrequency(System.String)">
            <summary>
             Return word's frequency
            </summary>
            <param name="word">word</param>
            <returns></returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.WordPOS(System.String)">
            <summary>
             Return word's POS tag
            </summary>
            <param name="word">word</param>
            <returns>POS tag</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SaveDistionaryToFile(System.String)">
            <summary>
             Save Loaded Dictionary to File
            </summary>
            <param name="fileName">File name</param>
        </member>
        <member name="P:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.EditDistance">
            <summary>
             Indicates the Maximum Edit Distance that searched for finding suggestions
            </summary>
        </member>
        <member name="P:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.SuggestionCount">
            <summary>
             Number of Suggestions
            </summary>
        </member>
        <member name="P:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.DictionaryFileName">
            <summary>
             The absolute path of dictionary file.
            </summary>
        </member>
        <member name="P:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.StemFileName">
            <summary>
             The absolute path of stem's file.
            </summary>
        </member>
        <member name="P:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerEngine.DicWordCount">
            <summary>
             Number of dictionary words
            </summary>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.#ctor(SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig)">
            <summary>
             Class Constructor
            </summary>
            <param name="config">Spellchecker configuration</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.SetSpellingRules(SCICT.NLP.TextProofing.SpellChecker.SpellingRules)">
            <summary>
             Set rules of spellchecking
            </summary>
            <param name="rules">Spellchecking rules (Logically OR rules)</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.UnsetSpellingRules(SCICT.NLP.TextProofing.SpellChecker.SpellingRules)">
            <summary>
             Remove rules of spellchecking
            </summary>
            <param name="rules">Spellchecking rules (Logically OR rules)</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.SetOnePassCorrectionRules(SCICT.NLP.TextProofing.SpellChecker.OnePassCorrectionRules)">
            <summary>
             Set rules of prespelling
            </summary>
            <param name="rules">Prespelling rules (Logically OR rules)</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.UnsetOnePassCorrectionRules(SCICT.NLP.TextProofing.SpellChecker.OnePassCorrectionRules)">
            <summary>
             Remove rules of prespelling
            </summary>
            <param name="rules">Prespelling rules (Logically OR rules)</param>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.GetSimpleFormOfWord(System.String)">
            <summary>
            Get affix-striped word
            </summary>
            <param name="word">Word</param>
            <returns>List of plausible simple forms of word</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.OnePassCorrection(System.String,System.String,System.String,System.Int32,System.String[]@,SCICT.NLP.TextProofing.SpellChecker.SuggestionType@,SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState@)">
            <summary>
             Prespell text
            </summary>
            <param name="word">Current word</param>
            <param name="preWord">Previous word in context</param>
            <param name="nxtWord">Next word in context</param>
            <param name="suggestionCount">Number of returned suggestions</param>
            <param name="suggestions">List of suggestions</param>
            <param name="suggestionType">Type of suggestins (Warning or Error)</param>
            <param name="spaceCorrectionState">State of space correction</param>
            <returns>True if the current word is correct, Flase if current word is incorrect</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.CheckSpelling(System.String,System.String,System.String,System.Int32,System.String[]@,SCICT.NLP.TextProofing.SpellChecker.SuggestionType@,SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState@)">
            <summary>
             Check and correct spelling
            </summary>
            <param name="word">Current word</param>
            <param name="preWord">Previous word in context</param>
            <param name="nxtWord">Next word in context</param>
            <param name="suggestionCount">Number of returned suggestions</param>
            <param name="suggestions">List of suggestions</param>
            <param name="suggestionType">Type of suggestins (Warning or Error)</param>
            <param name="spaceCorrectionState">State of space correction</param>
            <returns>True if the current word is correct, Flase if current word is incorrect</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.AddToDictionary(System.String,System.String)">
             <summary>
             Add a correct word to dictionary
             </summary>
             <param name="userSelectedWord">Form of word which user select to add to dictionary</param>
             <param name="originalWord">Original word without lemmatization</param>
            <returns>True if word is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.AddToDictionary(System.String,System.String,System.String)">
             <summary>
             Add a correct word to dictionary
             </summary>
             <param name="userSelectedWord">Form of word which user select to add to dictionary</param>
             <param name="originalWord">Original word without lemmatization</param>
             <param name="fileName">File Name</param>
            <returns>True if word is successfully added, otherwise False</returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.ContainWord(System.String)">
            <summary>
            check if the word is correct or exist in Ignore List
            </summary>
            <param name="word">Input word</param>
            <returns></returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.CheckSpellingWithSpacingConsideration(System.String,System.String,System.String,SCICT.NLP.TextProofing.SpellChecker.SpaceCorrectionState@)">
            <summary>
            correct wrong insert/delete of white space between words
            </summary>
            <param name="word">Input word</param>
            <param name="preWord">Previous word</param>
            <param name="nxtWord">Next word</param>
            <param name="spaceCorrectionState">return the spacing correction state</param>
            <returns>
            word with corrected spacing
            </returns>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.CheckSpellingWithAffixConsideration(System.String,System.Int32)">
            <summary>
            If the word contain the persian affix, this method check or try to correct its spelling without affix 
            </summary>
            <param name="word">Input word</param>
            <param name="suggestionCount">Number of returned suggestions</param>
            <returns>
            if word don't have affix return an array with one string with lenght 0
            if word without its affix being correct, return word
            if word without its affix being incorrect, correct the word without affix and return the corrected word with corresponding affix
            </returns>
        </member>
        <member name="P:SCICT.NLP.TextProofing.SpellChecker.PersianSpellChecker.RankingDetail">
            <summary>
             Return suggestion ranking detail
            </summary>
        </member>
        <member name="T:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig">
            <summary>
             configuration Class of Spell Checker
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig.StemPath">
            <summary>
             The absolute path of stem's file.
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig.DicPath">
            <summary>
             The absolute path of dictionary file.
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig.EditDistance">
            <summary>
             Indicates the Maximum Edit Distance that searched for finding suggestions
            </summary>
        </member>
        <member name="F:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig.SuggestionCount">
            <summary>
             Number of Suggestions
            </summary>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig.#ctor">
            <summary>
             Constructor Class
            </summary>
        </member>
        <member name="M:SCICT.NLP.TextProofing.SpellChecker.SpellCheckerConfig.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
             Constructor Class
            </summary>
            <param name="dicPath">Absolute path of dictionary file</param>
            <param name="editDist">Maximum Edit Distance that searched for finding suggestions</param>
            <param name="sugCnt">Number of Suggestions</param>
        </member>
    </members>
</doc>
